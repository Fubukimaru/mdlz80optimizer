pattern: cp 0 -> or a0: cp 0replacement:0: or apattern: cp 1 -> dec a0: cp 1replacement:0: dec aconstraints:regNotUsed(0,A)pattern: cp 255 -> inc a0: cp 255replacement:0: inc aconstraints:regNotUsed(0,A)pattern: ld a,0 -> xor a0: ld a,0replacement:0: xor aconstraints:flagsNotUsed(0,S,Z,H,P/V,N,C)pattern: 3*srl -> 3*rrca+and0: srl a1: srl a2: srl areplacement:0: rrca1: rrca2: rrca2: and #1fpattern: unused ld r,value0: ld ?reg,?anyreplacement:constraints:regNotUsed(0,?reg)pattern: pop-transfer-bc-de0: pop bc1: ld d,b2: ld e,creplacement:0: pop deconstraints:regNotUsed(2,bc)pattern: pop-transfer-bc-hl0: pop bc1: ld h,b2: ld l,creplacement:0: pop hlconstraints:regNotUsed(2,bc)pattern: inc (nn)0: ld a,(?const1)1: inc a2: ld (?const1),areplacement:0: ld hl,?const11: inc (hl)constraints:regNotUsed(2,A,HL)pattern: inc (nn) [2]0: ld a,(?const1)1: inc a2: ld (?const1),areplacement:0: ld hl,?const11: inc (hl)2: ld a,(hl)constraints:regNotUsed(2,HL)pattern: b,c -> ld bc0: ld b,?const11: ld c,?const2replacement:0: ld bc,?const2 + 256 * ?const1pattern: ld (hl),const0: ld a,?const11: ld (hl),areplacement:0: ld (hl),?const1constraints:regNotUsed(1,A)pattern: djnz0: dec b1: jr nz,?const1replacement:0: djnz ?const1pattern: ldi0: ld a, (hl)1: ld (de), a2: inc hl3: inc dereplacement:0: ldiconstraints:regNotUsed(3,A,BC)pattern: ldi+bc0: ld a, (hl)1: ld (de), a2: inc hl3: inc dereplacement:0: ldi1: inc bcconstraints:regNotUsed(3,A)          pattern: sbc->add0: ld de,?const11: or a2: sbc hl,dereplacement:0: ld de,-?const11: add hl,de pattern: neg->cpl0: neg1: add a,?const1replacement:0: cpl1: add a,?const1+1pattern: xor->cpl0: xor 255replacement:0: cplconstraints:flagNotUsed(0, S,Z,P/V,C)pattern: neg->sub0: ld a,b1: negreplacement:0: xor a1: sub bpattern: sub-neg0: ld a,?reg1: sub ?const2: negreplacement:0: ld a,?const1: sub ?regpattern: hl-left-shift0: sla l1: rl hreplacement:0: add hl,hlconstraints:flagsNotUsed(1, S,Z,P/V,C)pattern: jp<=0: cp ?const11: jp c,?const22: jp z,?const2replacement:0: cp ?const+11: jp c,?const2pattern: jr<=0: cp ?const11: jr c,?const22: jr z,?const2replacement:0: cp ?const+11: jr c,?const2