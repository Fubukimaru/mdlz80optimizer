name: cp 0 -> or apattern:0: cp 0replacement:0: or aname: cp 1 -> dec apattern:0: cp 1replacement:0: dec aconstraints:regNotUsed(0,A)name: cp 255 -> inc apattern:0: cp 255replacement:0: inc aconstraints:regNotUsed(0,A)name: ld a,0 -> xor apattern:0: ld a,0replacement:0: xor aconstraints:flagsNotUsed(0,S,Z,H,P/V,N,C)name: 3*srl -> 3*rrca+andpattern:0: srl a1: srl a2: srl areplacement:0: rrca1: rrca2: rrca2: and #1fname: unused ld r,valuepattern:0: ld ?reg,?anyreplacement:constraints:regNotUsed(0,?reg)name: pop-transferpattern:0: pop bc1: ld d,b2: ld e,creplacement:0: pop deconstraints:regNotUsed(2,bc)name: pop-transferpattern:0: pop bc1: ld h,b2: ld l,creplacement:0: pop hlconstraints:regNotUsed(2,bc)name: inc (nn)pattern:0: ld a,(?const1)1: inc a2: ld (?const1),areplacement:0: ld hl,?const11: inc (hl)constraints:regNotUsed(2,A,HL)name: inc (nn) [2]pattern:0: ld a,(?const1)1: inc a2: ld (?const1),areplacement:0: ld hl,?const11: inc (hl)2: ld a,(hl)constraints:regNotUsed(2,HL)name: b,c -> ld bcpattern:0: ld b,?const11: ld c,?const2replacement:0: ld bc,?const2 + 256 * ?const1name: ld (hl),constpattern:0: ld a,?const11: ld (hl),areplacement:0: ld (hl),?const1constraints:regNotUsed(1,A)name: djnzpattern:0: dec b1: jr nz,?const1replacement:0: djnz ?const1name: ldipattern:0: ld a, (hl)1: ld (de), a2: inc hl3: inc dereplacement:0: ldiconstraints:regNotUsed(3,BC)name: ldi+bcpattern:0: ld a, (hl)1: ld (de), a2: inc hl3: inc dereplacement:0: ldi1: inc bc          name: sbc->addpattern:0: ld de,?const11: or a2: sbc hl,dereplacement:0: ld de,-?const11: add hl,de name: neg->cplpattern:0: neg1: add a,?const1replacement:0: cpl1: add a,?const1+1