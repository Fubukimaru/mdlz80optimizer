; Author: Santiago Ontañón
; - Patterns are separated by a blank line
; - Patterns suggested by others are credited to them below.
; - If you do a pull request with more patterns, please credit yourself in a comment before the pattern.

; thanks to pgimeno for noticing the needed constraint
pattern: Replace cp nn; jp c,mm; jp z,mm with cp nn+1; jp c,mm
0: cp ?const1
1: jp c,?const2
2: jp z,?const2
replacement:
0: cp ?const1+1
1: jp c,?const2
constraints:
notEqual(?const1,255)

; thanks to pgimeno for noticing the needed constraint
pattern: Replace cp nn; jr c,mm; jr z,mm with cp nn+1; jr c,mm
0: cp ?const1
1: jr c,?const2
2: jr z,?const2
replacement:
0: cp ?const1+1
1: jr c,?const2
constraints:
notEqual(?const1,255)

pattern: Replace cp 0 with or a
0: cp 0
replacement:
0: or a

pattern: Replace cp 1 with dec a
0: cp 1
replacement:
0: dec a
constraints:
regNotUsed(0,A)

pattern: Replace cp 255 with inc a
0: cp 255
replacement:
0: inc a
constraints:
regNotUsed(0,A)

pattern: Replace ld a,0 with xor a
0: ld a,0
replacement:
0: xor a
constraints:
flagsNotUsed(0,S,Z,H,P/V,N,C)

pattern: Replace srl a; srl a; srl a with rrca; rrca; rrca; and #1f
0: srl a
1: srl a
2: srl a
replacement:
0: rrca
1: rrca
2: rrca
2: and #1f

pattern: Remove unused ld ?reg,?
0: ld ?reg,?any
replacement:
constraints:
regNotUsed(0,?reg)

pattern: Replace pop ?regpair1; ld ?regpair2h,?regpair1h; ld ?regpair2l,?regpair1l with pop ?regpair2
0: pop ?regpair1
1: ld ?regpair2h,?regpair1h
2: ld ?regpair2l,?regpair1l
replacement:
0: pop ?regpair2
constraints:
in(?regpair1,BC,DE,HL)
regpair(?regpair1,?regpair1h,?regpair1l)
regpair(?regpair2,?regpair2h,?regpair2l)
in(?regpair2,BC,DE,HL)
regNotUsed(2,?regpair1)

pattern: Replace pop ?regpair1; ld ?regpair2l,?regpair1l; ld ?regpair2h,?regpair1h with pop ?regpair2
0: pop ?regpair1
2: ld ?regpair2l,?regpair1l
1: ld ?regpair2h,?regpair1h
replacement:
0: pop ?regpair2
constraints:
in(?regpair1,BC,DE,HL)
regpair(?regpair1,?regpair1h,?regpair1l)
regpair(?regpair2,?regpair2h,?regpair2l)
in(?regpair2,BC,DE,HL)
regNotUsed(2,?regpair1)

pattern: Replace 0: ld a,(nn); inc a; ld (nn),a with  ld hl,nn; inc (hl)
0: ld a,(?const1)
1: inc a
2: ld (?const1),a
replacement:
0: ld hl,?const1
1: inc (hl)
constraints:
regNotUsed(2,A,HL)

pattern: Replace ld a,(nn); inc a; ld (nn),a with  ld hl,nn; inc (hl); ld a,(hl)
0: ld a,(?const1)
1: inc a
2: ld (?const1),a
replacement:
0: ld hl,?const1
1: inc (hl)
2: ld a,(hl)
constraints:
regNotUsed(2,HL)

pattern: Replace ld ?regpair1h,n; ld ?regpair1l,m with ld ?regpair1,m%256+n*256
0: ld ?regpair1h,?const1
1: ld ?regpair1l,?const2
replacement:
0: ld ?regpair1,((?const2) % 256) + 256 * (?const1)
constraints:
regpair(?regpair1,?regpair1h,?regpair1l)

pattern: Replace ld ?regpair1l,m; ld ?regpair1h,n with ld ?regpair1,m%256+n*256
0: ld ?regpair1l,?const2
1: ld ?regpair1h,?const1
replacement:
0: ld ?regpair1,((?const2) % 256) + 256 * (?const1)
constraints:
regpair(?regpair1,?regpair1h,?regpair1l)

pattern: Replace ld a,n; ld (hl),a with ld (hl),n
0: ld a,?const1
1: ld (hl),a
replacement:
0: ld (hl),?const1
constraints:
regNotUsed(1,A)

pattern: Replace dec b; jr nz,label with djnz label
0: dec b
1: jr nz,?const1
replacement:
0: djnz ?const1

pattern: Replace ld a,(hl); lde (de),a; inc hl; inc de with ldi
0: ld a,(hl)
1: ld (de),a
2: inc hl
3: inc de
replacement:
0: ldi
constraints:
regNotUsed(3,A,BC)

; thanks to pgimeno for suggesting this permutation
pattern: Replace ld a,(hl); inc hl; lde (de),a; inc de with ldi
0: ld a,(hl)
2: inc hl
1: ld (de),a
3: inc de
replacement:
0: ldi
constraints:
regNotUsed(3,A,BC)

pattern: Replace ld a,(hl); lde (de),a; inc de; inc hl; with ldi
0: ld a,(hl)
1: ld (de),a
3: inc de
2: inc hl
replacement:
0: ldi
constraints:
regNotUsed(3,A,BC)

pattern: Replace ld a,(hl); lde (de),a; inc hl; inc de with ldi; inc bc
0: ld a,(hl)
1: ld (de),a
2: inc hl
3: inc de
replacement:
0: ldi
1: inc bc
constraints:
regNotUsed(3,A)

; thanks to pgimeno for suggesting this permutation
pattern: Replace ld a,(hl); inc hl; lde (de),a; inc de with ldi; inc bc
0: ld a,(hl)
2: inc hl
1: ld (de),a
3: inc de
replacement:
0: ldi
1: inc bc
constraints:
regNotUsed(3,A)

pattern: Replace ld a,(hl); lde (de),a; inc de; inc hl; with ldi
0: ld a,(hl)
1: ld (de),a
3: inc de
2: inc hl
replacement:
0: ldi
1: inc bc
constraints:
regNotUsed(3,A)

pattern: Replace ld ?regpair,nn; or a; sbc hl,?regpair with ld ?regpair,-nn; add hl,regpair
0: ld ?regpair,?const1
1: or a
2: sbc hl,?regpair
replacement:
0: ld ?regpair,-?const1
1: add hl,?regpair
constraints:
in(?regpair,bc,de)

; thanks to grauw for suggesting this variation
pattern: Replace ld ?regpair,nn; and a; sbc hl,?regpair with ld ?regpair,-nn; add hl,regpair
0: ld ?regpair,?const1
1: and a
2: sbc hl,?regpair
replacement:
0: ld ?regpair,-?const1
1: add hl,?regpair
constraints:
in(?regpair,bc,de)

pattern: Replace neg; add a,n with cpl; add a,n+1
0: neg
1: add a,?const1
replacement:
0: cpl
1: add a,?const1+1

pattern: Replace xor 255 with cpl
0: xor 255
replacement:
0: cpl
constraints:
flagNotUsed(0,S,Z,P/V,C)

pattern: Replace ld a,?reg; neg with xor a; sub ?reg
0: ld a,?reg
1: neg
replacement:
0: xor a
1: sub ?reg

pattern: Replace ld a,?reg; sub n; neg with ld a,n; sub ?reg
0: ld a,?reg
1: sub ?const
2: neg
replacement:
0: ld a,?const
1: sub ?reg

pattern: Replace sla l; rl h with add hl,hl
0: sla l
1: rl h
replacement:
0: add hl,hl
constraints:
flagsNotUsed(1,S,Z,P/V,C)

; thanks to grauw for suggesting this pattern
pattern: Replace sla a with add a,a
0: sla a
replacement:
0: add a,a
constraints:
flagsNotUsed(0,H,P/V)

; theNestruo
pattern: Replace call nn; ret with jp nn
0: call ?const
1: ret
replacement:
0: jp ?const

pattern: Replace and 1; cp 1; jr z,nn with rra; jr nz,nn
0: and 1
1: cp 1
2: jr z,?const
replacement:
0: rra
1: jr c,?const
constraints:
regNotUsed(2,A)

pattern: Replace and 1; cp 1; jp z,nn with rra; jp nz,nn
0: and 1
1: cp 1
2: jp z,?const
replacement:
0: rra
1: jp c,?const
constraints:
regNotUsed(2,A)

pattern: Replace and 1; cp 1; call z,nn with rra; call nz,nn
0: and 1
1: cp 1
2: call z,?const
replacement:
0: rra
1: call c,?const
constraints:
regNotUsed(2,A)

pattern: Replace and 1; cp 1; jr z,nn with and 1; jr nz,nn
0: and 1
1: cp 1
2: jr z,?const
replacement:
0: and 1
1: jr nz,?const

pattern: Replace and 1; cp 1; jp z,nn with and 1; jp nz,nn
0: and 1
1: cp 1
2: jp z,?const
replacement:
0: and 1
1: jp nz,?const

pattern: Replace and 1; cp 1; call z,nn with and 1; call nz,nn
0: and 1
1: cp 1
2: call z,?const
replacement:
0: and 1
1: call nz,?const

pattern: Replace bit 0,a; jr z,nn with rra; jr nc,nn
0: bit 0,a
1: jr z,?const
replacement:
0: rra
1: jr nc,?const
constraints:
regNotUsed(1,A)

pattern: Replace bit 7,a; jr z,nn with rla; jr nc,nn
0: bit 7,a
1: jr z,?const
replacement:
0: rla
1: jr nc,?const
constraints:
regNotUsed(1,A)

pattern: Replace bit 0,a; jp z,nn with rra; jp nc,nn
0: bit 0,a
1: jp z,?const
replacement:
0: rra
1: jp nc,?const
constraints:
regNotUsed(1,A)

pattern: Replace bit 7,a; jp z,nn with rla; jp nc,nn
0: bit 7,a
1: jp z,?const
replacement:
0: rla
1: jp nc,?const
constraints:
regNotUsed(1,A)

pattern: Replace bit 0,a; call z,nn with rra; call nc,nn
0: bit 0,a
1: call z,?const
replacement:
0: rra
1: call nc,?const
constraints:
regNotUsed(1,A)

pattern: Replace bit 7,a; call z,nn with rla; call nc,nn
0: bit 7,a
1: call z,?const
replacement:
0: rla
1: call nc,?const
constraints:
regNotUsed(1,A)

pattern: Replace ld ?regixiy,nn; ld r,(?regixiy+mm) with ld hl,nn+mm; ld r,(hl)
0: ld ?regixiy,?const1
1: ld ?reg,(?regixiy+?const2)
replacement:
0: ld hl,?const1+?const2
1: ld ?reg,(hl)
constraints:
in(?regixiy,IX,IY)
regNotUsed(1,?regixiy,HL)

pattern: Replace ld ?regixiy,nn; ld r,(?regixiy) with ld hl,nn+mm; ld r,(hl)
0: ld ?regixiy,?const1
1: ld ?reg,(?regixiy)
replacement:
0: ld hl,?const1
1: ld ?reg,(hl)
constraints:
in(?regixiy,IX,IY)
regNotUsed(1,?regixiy,HL)

pattern: Remove ld ?reg,?reg
0: ld ?reg,?reg
replacement:

; theNestruo
pattern: Replace ld r,n; ld (?regixiy+m),r with ld (?regixiy+m),n
0: ld ?reg,?const1
1: ld (?regixiy+?const2),?reg
replacement:
0: ld (?regixiy+?const2),?const1
constraints:
in(?regixiy,IX,IY)
regNotUsed(1,?reg)

; theNestruo
pattern: Replace xor a; ld (?regixiy+m),a with ld (?regixiy+m),0
0: xor a
1: ld (?regixiy+?const2),a
replacement:
0: ld (?regixiy+?const2),0
constraints:
in(?regixiy,IX,IY)
regNotUsed(1,A)

; theNestruo
pattern: Replace ld ?regpair,?const1 with ld ?regpairl,(?const1 % 256)
0: ld ?regpair,?const1
replacement:
0: ld ?regpairl,(?const1 % 256)
constraints:
regpair(?regpair,?regpairh,?regpairl)
regNotUsed(0,?regpairh)

pattern: Replace ld ?regpair,?const1 with ld ?regpairh,(?const1 / 256)
0: ld ?regpair,?const1
replacement:
0: ld ?regpairh,(?const1 / 256)
constraints:
regpair(?regpair,?regpairh,?regpairl)
regNotUsed(0,?regpairl)
